/*
 * Drone-Command-API
 *
 * Drone Command API
 *
 * API version: 1.0
 * Contact: drone-derby-eng-team@google.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi_command

type Direction struct {

	Angle int32 `json:"angle"`

	Way string `json:"way"`
}

// AssertDirectionRequired checks if the required fields are not zero-ed
func AssertDirectionRequired(obj Direction) error {
	elements := map[string]interface{}{
		"angle": obj.Angle,
		"way": obj.Way,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseDirectionRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Direction (e.g. [][]Direction), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseDirectionRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aDirection, ok := obj.(Direction)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertDirectionRequired(aDirection)
	})
}
