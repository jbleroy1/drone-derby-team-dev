/*
 * Drone-Telemetry-API
 *
 * Drone Telemetry API
 *
 * API version: 1.0
 * Contact: drone-derby-eng-team@google.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi_telemetry

type DroneStatus struct {

	MacAddress string `json:"macAddress,omitempty"`

	Status string `json:"status,omitempty"`

	Version string `json:"version,omitempty"`

	Battery int32 `json:"battery,omitempty"`

	AdditionalPropertiesField []CoralStatusAdditionalPropertiesInner `json:"additionalProperties,omitempty"`
}

// AssertDroneStatusRequired checks if the required fields are not zero-ed
func AssertDroneStatusRequired(obj DroneStatus) error {
	for _, el := range obj.AdditionalPropertiesField {
		if err := AssertCoralStatusAdditionalPropertiesInnerRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseDroneStatusRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of DroneStatus (e.g. [][]DroneStatus), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseDroneStatusRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aDroneStatus, ok := obj.(DroneStatus)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertDroneStatusRequired(aDroneStatus)
	})
}
