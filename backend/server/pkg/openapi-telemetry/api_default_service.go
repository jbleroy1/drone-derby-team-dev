/*
 * Drone-Telemetry-API
 *
 * Drone Telemetry API
 *
 * API version: 1.0
 * Contact: drone-derby-eng-team@google.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi_telemetry

import (
	"context"
	"net/http"
	"errors"
)

// DefaultApiService is a service that implements the logic for the DefaultApiServicer
// This service should implement the business logic for every endpoint for the DefaultApi API.
// Include any external packages or services that will be required by this service.
type DefaultApiService struct {
}

// NewDefaultApiService creates a default api service
func NewDefaultApiService() DefaultApiServicer {
	return &DefaultApiService{}
}

// GetDiagCoral - GET Coral board status
func (s *DefaultApiService) GetDiagCoral(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetDiagCoral with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, CoralStatus{}) or use other options such as http.Ok ...
	//return Response(200, CoralStatus{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetDiagCoral method not implemented")
}

// GetDiagDrone - GET Drone Status
func (s *DefaultApiService) GetDiagDrone(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetDiagDrone with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, DroneStatus{}) or use other options such as http.Ok ...
	//return Response(200, DroneStatus{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetDiagDrone method not implemented")
}

// GetDiagOperations - GET Operations Details
func (s *DefaultApiService) GetDiagOperations(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetDiagOperations with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Operations{}) or use other options such as http.Ok ...
	//return Response(200, Operations{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetDiagOperations method not implemented")
}
